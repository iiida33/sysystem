<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lps.mapper.PropNameMapper">
    <resultMap id="BaseResultMap" type="com.lps.po.PropName">
        <id column="pn_id" property="pnId" jdbcType="INTEGER"/>
        <result column="pn_name" property="pnName" jdbcType="VARCHAR"/>
        <result column="cat_id" property="catId" jdbcType="INTEGER"/>
        <result column="is_must" property="isMust" jdbcType="BIT"/>
        <result column="is_select" property="isSelect" jdbcType="BIT"/>
        <result column="is_sale" property="isSale" jdbcType="BIT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    pn_id, pn_name, cat_id, is_must, is_select, is_sale
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lps.po.PropNameExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from prop_name
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from prop_name
        where pn_id = #{pnId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prop_name
    where pn_id = #{pnId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.lps.po.PropNameExample">
        delete from prop_name
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.lps.po.PropName">
    insert into prop_name (pn_id, pn_name, cat_id, 
      is_must, is_select, is_sale)
    values (#{pnId,jdbcType=INTEGER}, #{pnName,jdbcType=VARCHAR}, #{catId,jdbcType=INTEGER}, 
      #{isMust,jdbcType=BIT}, #{isSelect,jdbcType=BIT}, #{isSale,jdbcType=BIT})
  </insert>
    <insert id="insertSelective" parameterType="com.lps.po.PropName">
        insert into prop_name
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pnId != null">
                pn_id,
            </if>
            <if test="pnName != null">
                pn_name,
            </if>
            <if test="catId != null">
                cat_id,
            </if>
            <if test="isMust != null">
                is_must,
            </if>
            <if test="isSelect != null">
                is_select,
            </if>
            <if test="isSale != null">
                is_sale,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pnId != null">
                #{pnId,jdbcType=INTEGER},
            </if>
            <if test="pnName != null">
                #{pnName,jdbcType=VARCHAR},
            </if>
            <if test="catId != null">
                #{catId,jdbcType=INTEGER},
            </if>
            <if test="isMust != null">
                #{isMust,jdbcType=BIT},
            </if>
            <if test="isSelect != null">
                #{isSelect,jdbcType=BIT},
            </if>
            <if test="isSale != null">
                #{isSale,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lps.po.PropNameExample" resultType="java.lang.Integer">
        select count(*) from prop_name
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update prop_name
        <set>
            <if test="record.pnId != null">
                pn_id = #{record.pnId,jdbcType=INTEGER},
            </if>
            <if test="record.pnName != null">
                pn_name = #{record.pnName,jdbcType=VARCHAR},
            </if>
            <if test="record.catId != null">
                cat_id = #{record.catId,jdbcType=INTEGER},
            </if>
            <if test="record.isMust != null">
                is_must = #{record.isMust,jdbcType=BIT},
            </if>
            <if test="record.isSelect != null">
                is_select = #{record.isSelect,jdbcType=BIT},
            </if>
            <if test="record.isSale != null">
                is_sale = #{record.isSale,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update prop_name
        set pn_id = #{record.pnId,jdbcType=INTEGER},
        pn_name = #{record.pnName,jdbcType=VARCHAR},
        cat_id = #{record.catId,jdbcType=INTEGER},
        is_must = #{record.isMust,jdbcType=BIT},
        is_select = #{record.isSelect,jdbcType=BIT},
        is_sale = #{record.isSale,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.lps.po.PropName">
        update prop_name
        <set>
            <if test="pnName != null">
                pn_name = #{pnName,jdbcType=VARCHAR},
            </if>
            <if test="catId != null">
                cat_id = #{catId,jdbcType=INTEGER},
            </if>
            <if test="isMust != null">
                is_must = #{isMust,jdbcType=BIT},
            </if>
            <if test="isSelect != null">
                is_select = #{isSelect,jdbcType=BIT},
            </if>
            <if test="isSale != null">
                is_sale = #{isSale,jdbcType=BIT},
            </if>
        </set>
        where pn_id = #{pnId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lps.po.PropName">
    update prop_name
    set pn_name = #{pnName,jdbcType=VARCHAR},
      cat_id = #{catId,jdbcType=INTEGER},
      is_must = #{isMust,jdbcType=BIT},
      is_select = #{isSelect,jdbcType=BIT},
      is_sale = #{isSale,jdbcType=BIT}
    where pn_id = #{pnId,jdbcType=INTEGER}
  </update>

    <!--自定义部分-->
    <resultMap id="PropNameAndValueList" type="com.lps.vo.PropNameAndValueList" extends="BaseResultMap">
        <collection property="propValues" ofType="com.lps.po.PropValue">
            <id column="pv_id" property="pvId" jdbcType="INTEGER"/>
            <result column="pv_name" property="pvName" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <resultMap id="PropNameAndValueMap" type="com.lps.vo.PropNameAndValue">
        <id column="prop_name.pn_id" property="pnId" jdbcType="INTEGER"/>
        <result column="pn_name" property="pnName" jdbcType="VARCHAR"/>
        <result column="pv_id" property="pvId" jdbcType="VARCHAR"/>
        <result column="pv_name" property="pvName" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Name_Value_List">
    prop_name.pn_id,pn_name,cat_id,is_must,is_select,is_sale,pv_id,pv_name
  </sql>
    <!--根据CatId查询所有属性和对应的属性值-->
    <select id="selectAllNameAndValueByCatId" parameterType="java.lang.Integer" resultMap="PropNameAndValueList">
        SELECT
        <include refid="Name_Value_List"/>
        FROM prop_name,prop_value
        WHERE prop_name.pn_id= prop_value.pn_id AND cat_id = #{catId,jdbcType=INTEGER}
    </select>
    <!--根据PnId查询属性和对应的属性值-->
    <select id="selectNameAndAllValueByPnId" parameterType="java.lang.Integer" resultMap="PropNameAndValueList">
        SELECT
        <include refid="Name_Value_List"/>
        FROM prop_name,prop_value
        WHERE prop_name.pn_id= prop_value.pn_id AND prop_name.pn_id = #{pnId,jdbcType=INTEGER}
    </select>
    <!--根据属性值ID串查询对应属性名-->
    <select id="selectPropNameAndValue" parameterType="java.lang.String" resultMap="PropNameAndValueMap">
        SELECT prop_name.pn_id,pv_id,pn_name,pv_name FROM prop_name
        LEFT JOIN prop_value ON FIND_IN_SET(pv_id,#{skuProps,jdbcType=VARCHAR})
        WHERE prop_value.pn_id=prop_name.pn_id
    </select>
</mapper>