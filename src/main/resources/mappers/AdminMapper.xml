<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lps.mapper.AdminMapper" >
  <resultMap id="BaseResultMap" type="com.lps.po.Admin" >
    <id column="admin_id" property="adminId" jdbcType="INTEGER" />
    <result column="admin_num" property="adminNum" jdbcType="INTEGER" />
    <result column="admin_password" property="adminPassword" jdbcType="VARCHAR" />
    <result column="admin_name" property="adminName" jdbcType="VARCHAR" />
    <result column="admin_sex" property="adminSex" jdbcType="CHAR" />
    <result column="admin_birth" property="adminBirth" jdbcType="DATE" />
    <result column="admin_email" property="adminEmail" jdbcType="VARCHAR" />
    <result column="admin_phone" property="adminPhone" jdbcType="VARCHAR" />
    <result column="admin_address" property="adminAddress" jdbcType="VARCHAR" />
    <result column="admin_idnum" property="adminIdnum" jdbcType="CHAR" />
    <result column="admin_pic" property="adminPic" jdbcType="VARCHAR" />
    <result column="admin_authority" property="adminAuthority" jdbcType="INTEGER" />
    <result column="admin_entry" property="adminEntry" jdbcType="DATE" />
    <result column="is_resign" property="isResign" jdbcType="BIT" />
    <result column="admin_leave" property="adminLeave" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    admin_id, admin_num, admin_password, admin_name, admin_sex, admin_birth, admin_email, 
    admin_phone, admin_address, admin_idnum, admin_pic, admin_authority, admin_entry, 
    is_resign, admin_leave
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lps.po.AdminExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from admin
    where admin_id = #{adminId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from admin
    where admin_id = #{adminId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lps.po.AdminExample" >
    delete from admin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lps.po.Admin" >
    insert into admin (admin_id, admin_num, admin_password, 
      admin_name, admin_sex, admin_birth, 
      admin_email, admin_phone, admin_address, 
      admin_idnum, admin_pic, admin_authority, 
      admin_entry, is_resign, admin_leave
      )
    values (#{adminId,jdbcType=INTEGER}, #{adminNum,jdbcType=INTEGER}, #{adminPassword,jdbcType=VARCHAR}, 
      #{adminName,jdbcType=VARCHAR}, #{adminSex,jdbcType=CHAR}, #{adminBirth,jdbcType=DATE}, 
      #{adminEmail,jdbcType=VARCHAR}, #{adminPhone,jdbcType=VARCHAR}, #{adminAddress,jdbcType=VARCHAR}, 
      #{adminIdnum,jdbcType=CHAR}, #{adminPic,jdbcType=VARCHAR}, #{adminAuthority,jdbcType=INTEGER}, 
      #{adminEntry,jdbcType=DATE}, #{isResign,jdbcType=BIT}, #{adminLeave,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lps.po.Admin" >
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="adminNum != null" >
        admin_num,
      </if>
      <if test="adminPassword != null" >
        admin_password,
      </if>
      <if test="adminName != null" >
        admin_name,
      </if>
      <if test="adminSex != null" >
        admin_sex,
      </if>
      <if test="adminBirth != null" >
        admin_birth,
      </if>
      <if test="adminEmail != null" >
        admin_email,
      </if>
      <if test="adminPhone != null" >
        admin_phone,
      </if>
      <if test="adminAddress != null" >
        admin_address,
      </if>
      <if test="adminIdnum != null" >
        admin_idnum,
      </if>
      <if test="adminPic != null" >
        admin_pic,
      </if>
      <if test="adminAuthority != null" >
        admin_authority,
      </if>
      <if test="adminEntry != null" >
        admin_entry,
      </if>
      <if test="isResign != null" >
        is_resign,
      </if>
      <if test="adminLeave != null" >
        admin_leave,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminNum != null" >
        #{adminNum,jdbcType=INTEGER},
      </if>
      <if test="adminPassword != null" >
        #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="adminName != null" >
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminSex != null" >
        #{adminSex,jdbcType=CHAR},
      </if>
      <if test="adminBirth != null" >
        #{adminBirth,jdbcType=DATE},
      </if>
      <if test="adminEmail != null" >
        #{adminEmail,jdbcType=VARCHAR},
      </if>
      <if test="adminPhone != null" >
        #{adminPhone,jdbcType=VARCHAR},
      </if>
      <if test="adminAddress != null" >
        #{adminAddress,jdbcType=VARCHAR},
      </if>
      <if test="adminIdnum != null" >
        #{adminIdnum,jdbcType=CHAR},
      </if>
      <if test="adminPic != null" >
        #{adminPic,jdbcType=VARCHAR},
      </if>
      <if test="adminAuthority != null" >
        #{adminAuthority,jdbcType=INTEGER},
      </if>
      <if test="adminEntry != null" >
        #{adminEntry,jdbcType=DATE},
      </if>
      <if test="isResign != null" >
        #{isResign,jdbcType=BIT},
      </if>
      <if test="adminLeave != null" >
        #{adminLeave,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lps.po.AdminExample" resultType="java.lang.Integer" >
    select count(*) from admin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update admin
    <set >
      <if test="record.adminId != null" >
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.adminNum != null" >
        admin_num = #{record.adminNum,jdbcType=INTEGER},
      </if>
      <if test="record.adminPassword != null" >
        admin_password = #{record.adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.adminName != null" >
        admin_name = #{record.adminName,jdbcType=VARCHAR},
      </if>
      <if test="record.adminSex != null" >
        admin_sex = #{record.adminSex,jdbcType=CHAR},
      </if>
      <if test="record.adminBirth != null" >
        admin_birth = #{record.adminBirth,jdbcType=DATE},
      </if>
      <if test="record.adminEmail != null" >
        admin_email = #{record.adminEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.adminPhone != null" >
        admin_phone = #{record.adminPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.adminAddress != null" >
        admin_address = #{record.adminAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.adminIdnum != null" >
        admin_idnum = #{record.adminIdnum,jdbcType=CHAR},
      </if>
      <if test="record.adminPic != null" >
        admin_pic = #{record.adminPic,jdbcType=VARCHAR},
      </if>
      <if test="record.adminAuthority != null" >
        admin_authority = #{record.adminAuthority,jdbcType=INTEGER},
      </if>
      <if test="record.adminEntry != null" >
        admin_entry = #{record.adminEntry,jdbcType=DATE},
      </if>
      <if test="record.isResign != null" >
        is_resign = #{record.isResign,jdbcType=BIT},
      </if>
      <if test="record.adminLeave != null" >
        admin_leave = #{record.adminLeave,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update admin
    set admin_id = #{record.adminId,jdbcType=INTEGER},
      admin_num = #{record.adminNum,jdbcType=INTEGER},
      admin_password = #{record.adminPassword,jdbcType=VARCHAR},
      admin_name = #{record.adminName,jdbcType=VARCHAR},
      admin_sex = #{record.adminSex,jdbcType=CHAR},
      admin_birth = #{record.adminBirth,jdbcType=DATE},
      admin_email = #{record.adminEmail,jdbcType=VARCHAR},
      admin_phone = #{record.adminPhone,jdbcType=VARCHAR},
      admin_address = #{record.adminAddress,jdbcType=VARCHAR},
      admin_idnum = #{record.adminIdnum,jdbcType=CHAR},
      admin_pic = #{record.adminPic,jdbcType=VARCHAR},
      admin_authority = #{record.adminAuthority,jdbcType=INTEGER},
      admin_entry = #{record.adminEntry,jdbcType=DATE},
      is_resign = #{record.isResign,jdbcType=BIT},
      admin_leave = #{record.adminLeave,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lps.po.Admin" >
    update admin
    <set >
      <if test="adminNum != null" >
        admin_num = #{adminNum,jdbcType=INTEGER},
      </if>
      <if test="adminPassword != null" >
        admin_password = #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="adminName != null" >
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminSex != null" >
        admin_sex = #{adminSex,jdbcType=CHAR},
      </if>
      <if test="adminBirth != null" >
        admin_birth = #{adminBirth,jdbcType=DATE},
      </if>
      <if test="adminEmail != null" >
        admin_email = #{adminEmail,jdbcType=VARCHAR},
      </if>
      <if test="adminPhone != null" >
        admin_phone = #{adminPhone,jdbcType=VARCHAR},
      </if>
      <if test="adminAddress != null" >
        admin_address = #{adminAddress,jdbcType=VARCHAR},
      </if>
      <if test="adminIdnum != null" >
        admin_idnum = #{adminIdnum,jdbcType=CHAR},
      </if>
      <if test="adminPic != null" >
        admin_pic = #{adminPic,jdbcType=VARCHAR},
      </if>
      <if test="adminAuthority != null" >
        admin_authority = #{adminAuthority,jdbcType=INTEGER},
      </if>
      <if test="adminEntry != null" >
        admin_entry = #{adminEntry,jdbcType=DATE},
      </if>
      <if test="isResign != null" >
        is_resign = #{isResign,jdbcType=BIT},
      </if>
      <if test="adminLeave != null" >
        admin_leave = #{adminLeave,jdbcType=DATE},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lps.po.Admin" >
    update admin
    set admin_num = #{adminNum,jdbcType=INTEGER},
      admin_password = #{adminPassword,jdbcType=VARCHAR},
      admin_name = #{adminName,jdbcType=VARCHAR},
      admin_sex = #{adminSex,jdbcType=CHAR},
      admin_birth = #{adminBirth,jdbcType=DATE},
      admin_email = #{adminEmail,jdbcType=VARCHAR},
      admin_phone = #{adminPhone,jdbcType=VARCHAR},
      admin_address = #{adminAddress,jdbcType=VARCHAR},
      admin_idnum = #{adminIdnum,jdbcType=CHAR},
      admin_pic = #{adminPic,jdbcType=VARCHAR},
      admin_authority = #{adminAuthority,jdbcType=INTEGER},
      admin_entry = #{adminEntry,jdbcType=DATE},
      is_resign = #{isResign,jdbcType=BIT},
      admin_leave = #{adminLeave,jdbcType=DATE}
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
</mapper>