<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lps.mapper.GoodPicMapper" >
  <resultMap id="BaseResultMap" type="com.lps.po.GoodPic" >
    <id column="pic_id" property="picId" jdbcType="INTEGER" />
    <result column="pic_name" property="picName" jdbcType="VARCHAR" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="is_turn" property="isTurn" jdbcType="BIT" />
    <result column="is_detail" property="isDetail" jdbcType="BIT" />
    <result column="pic_order" property="picOrder" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pic_id, pic_name, good_id, is_turn, is_detail, pic_order
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lps.po.GoodPicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from good_pic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from good_pic
    where pic_id = #{picId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from good_pic
    where pic_id = #{picId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lps.po.GoodPicExample" >
    delete from good_pic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lps.po.GoodPic" >
    insert into good_pic (pic_id, pic_name, good_id, 
      is_turn, is_detail, pic_order)
    values (#{picId,jdbcType=INTEGER}, #{picName,jdbcType=VARCHAR}, #{goodId,jdbcType=INTEGER}, 
      #{isTurn,jdbcType=BIT}, #{isDetail,jdbcType=BIT}, #{picOrder,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lps.po.GoodPic" >
    insert into good_pic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="picId != null" >
        pic_id,
      </if>
      <if test="picName != null" >
        pic_name,
      </if>
      <if test="goodId != null" >
        good_id,
      </if>
      <if test="isTurn != null" >
        is_turn,
      </if>
      <if test="isDetail != null" >
        is_detail,
      </if>
      <if test="picOrder != null" >
        pic_order,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="picId != null" >
        #{picId,jdbcType=INTEGER},
      </if>
      <if test="picName != null" >
        #{picName,jdbcType=VARCHAR},
      </if>
      <if test="goodId != null" >
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="isTurn != null" >
        #{isTurn,jdbcType=BIT},
      </if>
      <if test="isDetail != null" >
        #{isDetail,jdbcType=BIT},
      </if>
      <if test="picOrder != null" >
        #{picOrder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lps.po.GoodPicExample" resultType="java.lang.Integer" >
    select count(*) from good_pic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update good_pic
    <set >
      <if test="record.picId != null" >
        pic_id = #{record.picId,jdbcType=INTEGER},
      </if>
      <if test="record.picName != null" >
        pic_name = #{record.picName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodId != null" >
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.isTurn != null" >
        is_turn = #{record.isTurn,jdbcType=BIT},
      </if>
      <if test="record.isDetail != null" >
        is_detail = #{record.isDetail,jdbcType=BIT},
      </if>
      <if test="record.picOrder != null" >
        pic_order = #{record.picOrder,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update good_pic
    set pic_id = #{record.picId,jdbcType=INTEGER},
      pic_name = #{record.picName,jdbcType=VARCHAR},
      good_id = #{record.goodId,jdbcType=INTEGER},
      is_turn = #{record.isTurn,jdbcType=BIT},
      is_detail = #{record.isDetail,jdbcType=BIT},
      pic_order = #{record.picOrder,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lps.po.GoodPic" >
    update good_pic
    <set >
      <if test="picName != null" >
        pic_name = #{picName,jdbcType=VARCHAR},
      </if>
      <if test="goodId != null" >
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="isTurn != null" >
        is_turn = #{isTurn,jdbcType=BIT},
      </if>
      <if test="isDetail != null" >
        is_detail = #{isDetail,jdbcType=BIT},
      </if>
      <if test="picOrder != null" >
        pic_order = #{picOrder,jdbcType=INTEGER},
      </if>
    </set>
    where pic_id = #{picId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lps.po.GoodPic" >
    update good_pic
    set pic_name = #{picName,jdbcType=VARCHAR},
      good_id = #{goodId,jdbcType=INTEGER},
      is_turn = #{isTurn,jdbcType=BIT},
      is_detail = #{isDetail,jdbcType=BIT},
      pic_order = #{picOrder,jdbcType=INTEGER}
    where pic_id = #{picId,jdbcType=INTEGER}
  </update>

  <!--自定义部分-->
  <!--根据商品ID（goodId）删除图片-->
  <delete id="deletePicByGoodId" parameterType="java.lang.Integer">
    DELETE FROM good_pic WHERE good_id = #{goodId,jdbcType=INTEGER}
  </delete>
</mapper>