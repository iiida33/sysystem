<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lps.mapper.CollectMapper">
    <resultMap id="BaseResultMap" type="com.lps.po.Collect">
        <id column="collect_id" property="collectId" jdbcType="INTEGER"/>
        <result column="cust_id" property="custId" jdbcType="INTEGER"/>
        <result column="good_id" property="goodId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    collect_id, cust_id, good_id
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lps.po.CollectExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from collect
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from collect
        where collect_id = #{collectId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collect
    where collect_id = #{collectId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.lps.po.CollectExample">
        delete from collect
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.lps.po.Collect">
    insert into collect (collect_id, cust_id, good_id
      )
    values (#{collectId,jdbcType=INTEGER}, #{custId,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.lps.po.Collect">
        insert into collect
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="collectId != null">
                collect_id,
            </if>
            <if test="custId != null">
                cust_id,
            </if>
            <if test="goodId != null">
                good_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="collectId != null">
                #{collectId,jdbcType=INTEGER},
            </if>
            <if test="custId != null">
                #{custId,jdbcType=INTEGER},
            </if>
            <if test="goodId != null">
                #{goodId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lps.po.CollectExample" resultType="java.lang.Integer">
        select count(*) from collect
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update collect
        <set>
            <if test="record.collectId != null">
                collect_id = #{record.collectId,jdbcType=INTEGER},
            </if>
            <if test="record.custId != null">
                cust_id = #{record.custId,jdbcType=INTEGER},
            </if>
            <if test="record.goodId != null">
                good_id = #{record.goodId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update collect
        set collect_id = #{record.collectId,jdbcType=INTEGER},
        cust_id = #{record.custId,jdbcType=INTEGER},
        good_id = #{record.goodId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.lps.po.Collect">
        update collect
        <set>
            <if test="custId != null">
                cust_id = #{custId,jdbcType=INTEGER},
            </if>
            <if test="goodId != null">
                good_id = #{goodId,jdbcType=INTEGER},
            </if>
        </set>
        where collect_id = #{collectId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lps.po.Collect">
    update collect
    set cust_id = #{custId,jdbcType=INTEGER},
      good_id = #{goodId,jdbcType=INTEGER}
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>


    <!--自定义-->
    <resultMap id="CollectShowMap" type="com.lps.vo.CollectShowModel">
        <id column="collect_id" property="collectId" jdbcType="INTEGER"/>
        <result column="good_id" property="goodId" jdbcType="INTEGER"/>
        <result column="good_name" property="goodName" jdbcType="VARCHAR"/>
        <result column="good_state" property="goodState" jdbcType="BIT"/>
        <result column="good_image" property="goodImage" jdbcType="VARCHAR"/>
        <result column="MIN(sku_price)" property="Price" jdbcType="DOUBLE"/>
    </resultMap>
    <!--根据用户ID查询收藏夹展示信息列表
    sql:SELECT collect_id,collect.good_id, good_name,good_state,good_image,MIN(sku_price) FROM collect
               LEFT JOIN good ON collect.good_id = good.good_id AND collect.cust_id=? LEFT
               JOIN good_sku ON collect.collect_id=good_sku.good_id GROUP BY good_id;-->
    <select id="selectByCustIdShow" parameterType="java.lang.Integer" resultMap="CollectShowMap">
    SELECT collect_id,collect.good_id, good_name,good_state,good_image,MIN(sku_price) FROM collect
               LEFT JOIN good ON collect.good_id = good.good_id AND collect.cust_id=#{custId,jdbcType=INTEGER}
               LEFT JOIN good_sku ON collect.collect_id=good_sku.good_id GROUP BY good_id
  </select>

    <!--根据用户ID删除收藏夹信息-->
    <delete id="deleteByCustId" parameterType="java.lang.Integer">
        delete from collect where cust_id = #{custId,jdbcType=INTEGER}
    </delete>
</mapper>